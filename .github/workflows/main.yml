name: main

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          # macos-x64
          - macos-12
          # macos-aarch64
          - macos-14
          # linux-x64
          - ubuntu-20.04
          # windows-x64
          - windows-2019

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - uses: jdx/mise-action@v2

      # # prepare-env: Setup node / pnpm.
      # - uses: pnpm/action-setup@v3
      #   with:
      #     version: 8
      #     run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-${{ runner.arch }}-

      # prepare-env: Setup rust.
      # - uses: dtolnay/rust-toolchain@stable

      # prepare-env: Tauri deps for linux.
      - if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        shell: bash

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
            !src-tauri/target/release/bundle/
          key: cargo-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('src-tauri/Cargo.lock', 'src-tauri/tauri.conf.json') }}
          restore-keys: |
            cargo-${{ runner.os }}-${{ runner.arch }}-

      # Bumping the version in each build is easier than setting up a new job
      # and transferring over artifacts.
      # We do it again in the deploy job and then commit that along with other
      # files generated during that phase.
      - run: npx commit-and-tag-version --skip.commit --skip.tag
        shell: bash
        if: endsWith(github.ref, '/main')

      - run: ./script/prepare-env
        shell: bash

      - run: ./script/build
        shell: bash
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - uses: actions/upload-artifact@v4
        with:
          name: wadpunk-${{ matrix.platform }}-${{ runner.arch }}
          retention-days: 7
          path: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/nsis/*.nsis.zip
            src-tauri/target/release/bundle/nsis/*.nsis.zip.sig
            src-tauri/target/release/bundle/macos/*.app.tar.gz
            src-tauri/target/release/bundle/macos/*.app.tar.gz.sig
            src-tauri/target/release/bundle/appimage/*.AppImage.tar.gz
            src-tauri/target/release/bundle/appimage/*.AppImage.tar.gz.sig

  deploy:
    needs:
      - build

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
        if: endsWith(github.ref, '/main')

      # prepare-env: Push as github bot.
      # https://github.community/t/github-actions-bot-email-address/17204/5
      - name: Prep for git push
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        shell: bash
        if: endsWith(github.ref, '/main')

      - uses: actions/download-artifact@v4
        if: endsWith(github.ref, '/main')

      # This is CI specific, artifacts don't seem to be stored with a helpful
      # path.
      - run: |
          mkdir -p src-tauri/target/release/bundle
          cp -rl wadpunk-windows-2019-X64/* src-tauri/target/release/bundle
          cp -rl wadpunk-macos-12-X64/* src-tauri/target/release/bundle
          cp -rl wadpunk-macos-14-ARM64/* src-tauri/target/release/bundle
          cp -rl wadpunk-ubuntu-20.04-X64/* src-tauri/target/release/bundle
        shell: bash
        if: endsWith(github.ref, '/main')

      - run: ./script/deploy
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: endsWith(github.ref, '/main')
